generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Project {
  id String @id @default(uuid())
  title String
  columns Column[]
}

model Column {
  id String @id @default(uuid())
  title String
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  tasks Task[]
}

model Task {
  id String @id @default(uuid())
  title String 
  description String
  createdAt DateTime @default(now())
  inProcess String
  finishAt DateTime 
  priority String
  status String
  file String
  column Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId String
  subtasks Subtask[]
  comments Comment[]
}

model Subtask {
  id String @id @default(uuid())
  description String
  done Boolean
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId String
}

model User {
  id String @id @default(uuid())
  name String
  comments Comment[]
}

model Comment {
  id String @id @default(uuid())
  message String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  task Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId String
  parent Comment? @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children Comment[] @relation("ParentChild")
  parentId String?
}
